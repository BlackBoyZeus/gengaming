# Prometheus Deployment for GameGen-X monitoring
# Version: v2.45.0
# Platform: FreeBSD-based Orbis OS
apiVersion: apps/v1
kind: Deployment
metadata:
  name: prometheus
  namespace: monitoring
  labels:
    app: gamegen-x
    component: monitoring
    service: prometheus
    environment: production
spec:
  replicas: 1
  selector:
    matchLabels:
      app: gamegen-x
      component: monitoring
      service: prometheus
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: gamegen-x
        component: monitoring
        service: prometheus
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9090"
    spec:
      # Security context for FreeBSD compatibility
      securityContext:
        runAsUser: 65534  # nobody user
        runAsGroup: 65534
        runAsNonRoot: true
        fsGroup: 65534
        seccompProfile:
          type: RuntimeDefault
      
      containers:
      - name: prometheus
        image: docker.io/prom/prometheus:v2.45.0
        imagePullPolicy: IfNotPresent
        
        args:
        - --config.file=/etc/prometheus/prometheus.yml
        - --storage.tsdb.path=/prometheus
        - --storage.tsdb.retention.time=30d
        - --web.enable-lifecycle
        - --web.enable-admin-api
        - --web.console.libraries=/usr/share/prometheus/console_libraries
        - --web.console.templates=/usr/share/prometheus/consoles
        
        ports:
        - name: web
          containerPort: 9090
          protocol: TCP
        
        resources:
          requests:
            cpu: 500m
            memory: 2Gi
          limits:
            cpu: 1000m
            memory: 4Gi
        
        volumeMounts:
        - name: prometheus-config
          mountPath: /etc/prometheus
          readOnly: true
        - name: prometheus-storage
          mountPath: /prometheus
        
        readinessProbe:
          httpGet:
            path: /-/ready
            port: 9090
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 3
        
        livenessProbe:
          httpGet:
            path: /-/healthy
            port: 9090
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 3
        
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
      
      volumes:
      - name: prometheus-config
        configMap:
          name: prometheus-config
      - name: prometheus-storage
        persistentVolumeClaim:
          claimName: prometheus-storage-claim
      
      # FreeBSD-specific node affinity
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.io/os
                operator: In
                values:
                - freebsd
      
      # Ensure monitoring stability
      terminationGracePeriodSeconds: 300
      
      # Prevent monitoring disruption
      tolerations:
      - key: "monitoring"
        operator: "Exists"
        effect: "NoSchedule"