apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
  namespace: monitoring
  labels:
    app: gamegen-x
    component: monitoring
    service: grafana
    os: freebsd
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "3000"
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  selector:
    matchLabels:
      app: gamegen-x
      component: monitoring
      service: grafana
  template:
    metadata:
      labels:
        app: gamegen-x
        component: monitoring
        service: grafana
        os: freebsd
    spec:
      securityContext:
        runAsUser: 472
        runAsGroup: 472
        runAsNonRoot: true
        fsGroup: 472
      containers:
      - name: grafana
        # FreeBSD-compatible Grafana image version 9.5.0
        image: docker.io/grafana/grafana:9.5.0-freebsd
        securityContext:
          capabilities:
            drop:
            - ALL
        ports:
        - name: http
          containerPort: 3000
          protocol: TCP
        resources:
          requests:
            cpu: 500m
            memory: 1Gi
          limits:
            cpu: "1"
            memory: 2Gi
        readinessProbe:
          httpGet:
            path: /api/health
            port: 3000
          initialDelaySeconds: 30
          timeoutSeconds: 5
        livenessProbe:
          httpGet:
            path: /api/health
            port: 3000
          initialDelaySeconds: 60
          timeoutSeconds: 5
        env:
        - name: GF_SECURITY_ADMIN_PASSWORD
          valueFrom:
            secretKeyRef:
              name: grafana-secrets
              key: admin-password
        - name: GF_PATHS_DATA
          value: /var/lib/grafana
        - name: GF_PATHS_LOGS
          value: /var/log/grafana
        - name: GF_INSTALL_PLUGINS
          value: grafana-piechart-panel,grafana-worldmap-panel
        volumeMounts:
        - name: grafana-config
          mountPath: /etc/grafana
          readOnly: true
        - name: grafana-storage
          mountPath: /var/lib/grafana
        - name: grafana-dashboards
          mountPath: /etc/grafana/provisioning/dashboards
          readOnly: true
      volumes:
      - name: grafana-config
        configMap:
          name: grafana-config
      - name: grafana-storage
        persistentVolumeClaim:
          claimName: grafana-storage-claim
      - name: grafana-dashboards
        configMap:
          name: grafana-dashboards
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: service
                  operator: In
                  values:
                  - grafana
              topologyKey: kubernetes.io/hostname
      tolerations:
      - key: "os"
        operator: "Equal"
        value: "freebsd"
        effect: "NoSchedule"