apiVersion: v1
kind: Secret
metadata:
  name: backend-secrets
  namespace: gamegen-x
  labels:
    app: gamegen-x
    component: backend
    environment: production
    security-tier: restricted
    compliance: gdpr-soc2-iso27001
  annotations:
    encryption.kubernetes.io/v1: AES-256
    rotation.kubernetes.io/trigger: "30d"
    audit.kubernetes.io/enabled: "true"
    audit.kubernetes.io/retention: "90d"
    backup.kubernetes.io/enabled: "true"
    backup.kubernetes.io/retention: "30d"
    compliance.kubernetes.io/standards: "GDPR,SOC2,ISO27001"
type: Opaque
stringData:
  # Database credentials - encrypted at rest
  DATABASE_URL: "postgresql://postgres.gamegen-x.svc.cluster.local:5432/gamegen_x_db?sslmode=verify-full"
  DATABASE_USER: "gamegen_x_backend_prod"
  DATABASE_PASSWORD: "{{SECURE_RANDOM_STRING_64}}"

  # JWT configuration
  JWT_SECRET_KEY: "{{SECURE_RANDOM_STRING_64}}"
  JWT_ALGORITHM: "RS256"
  
  # API security
  API_KEY_SALT: "{{SECURE_RANDOM_STRING_32}}"
  
  # Redis credentials
  REDIS_PASSWORD: "{{SECURE_RANDOM_STRING_64}}"
  
  # Model and storage encryption
  MODEL_ENCRYPTION_KEY: "{{SECURE_RANDOM_STRING_64}}"
  STORAGE_ACCESS_KEY: "{{SECURE_RANDOM_STRING_32}}"
  STORAGE_SECRET_KEY: "{{SECURE_RANDOM_STRING_64}}"

---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: backend-secrets-access
  namespace: gamegen-x
subjects:
- kind: ServiceAccount
  name: backend-service-account
  namespace: gamegen-x
- kind: ServiceAccount
  name: secret-rotation-service
  namespace: gamegen-x
roleRef:
  kind: Role
  name: secret-reader
  apiGroup: rbac.authorization.k8s.io

---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: backend-secrets-access
  namespace: gamegen-x
spec:
  podSelector:
    matchLabels:
      app: gamegen-x
      component: backend
  policyTypes:
  - Ingress
  ingress:
  - from:
    - podSelector:
        matchLabels:
          app: gamegen-x
          component: backend
    ports:
    - protocol: TCP
      port: 443